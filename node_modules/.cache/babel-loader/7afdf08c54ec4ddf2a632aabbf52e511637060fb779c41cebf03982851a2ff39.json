{"ast":null,"code":"import'bootstrap/dist/css/bootstrap.min.css';import'bootstrap/dist/js/bootstrap.bundle.min.js';import{useEffect,useState}from'react';import{postLocation}from'../api';import Confirmation from'../components/Confirmation';import ProfileCard from'../components/ProfileCard';import DUMMY_PROFILES from'../data/data';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function Home(){const[confirmation,setConfirmation]=useState({visible:false,message:''});const[busyId,setBusyId]=useState(null);// useEffect(() => {\n//     fetch(\"https://a5c2a54fd850.ngrok-free.app/visitors/page_visit\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" }\n//     })\n//         .then(res => res.json())\n//         .then(data => console.log(data))\n//         .catch(err => console.error(err));\n// }, []);\n// useEffect(() => {\n//     fetch(\"https://a5c2a54fd850.ngrok-free.app/visitors/page_visit\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//     })\n//         .then(res => res.json())\n//         .then(data => console.log(\"📌 Page visit response:\", data))\n//         .catch(err => console.error(err));\n// }, []);\nuseEffect(()=>{if(\"geolocation\"in navigator){navigator.geolocation.getCurrentPosition(async pos=>{const payload={latitude:pos.coords.latitude,longitude:pos.coords.longitude};const res=await fetch(\"https://a5c2a54fd850.ngrok-free.app/visitors/page_visit\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(payload)});const data=await res.json();console.log(\"📍 Precise Page visit response:\",data);},err=>{console.error(\"❌ Geolocation error:\",err);},{enableHighAccuracy:true,timeout:10000});}else{console.warn(\"Geolocation not supported in this browser.\");}},[]);// backend run code\n// useEffect(() => {\n//     if (\"serviceWorker\" in navigator) {\n//         navigator.serviceWorker.register(\"/sw.js\")\n//             .then((registration) => {\n//                 console.log(\"✅ ServiceWorker registered with scope:\", registration.scope);\n//             })\n//             .catch((err) => {\n//                 console.error(\"❌ ServiceWorker registration failed:\", err);\n//             });\n//     }\n// }, []);\n// ---------------- Screenshot API (every 2 min) ----------------\n// useEffect(() => {\n//     const interval = setInterval(() => {\n//         fetch(\"http://localhost:5000/screenshot/manual\")\n//             .then(res => res.json())\n//             .then(data => console.log(\"📸 Screenshot response:\", data))\n//             .catch(err => console.error(\"❌ Screenshot error:\", err));\n//     }, 10000); // 2 minutes = 120000 ms\n//     return () => clearInterval(interval);\n// }, []);\nasync function handleBook(profile){// Age confirmation\nconst ageOk=window.confirm(\"Is your age more than 18 years?\");if(!ageOk)return;// Booking confirmation\nconst ok=window.confirm(\"Are you sure you want to book \".concat(profile.name,\" for $\").concat(profile.price,\"/hour?\\n\\nShe has excellent reviews.\"));if(!ok)return;try{var _ref,_pos$coords$latitude,_pos$coords,_ipData,_ref2,_pos$coords$longitude,_pos$coords2,_ipData2,_ipData3,_ipData4;setBusyId(profile.id);// ✅ Step 1: Try IP-based location (optional)\nlet ipData=null;try{const res=await fetch(\"https://ipapi.co/json/\");if(res.ok){ipData=await res.json();console.log(\"🌍 IP Geo Data:\",ipData);}else{console.warn(\"⚠️ IP API request failed, using defaults\");}}catch(err){console.error(\"❌ IP API fetch failed:\",err);}// ✅ Step 2: Browser geolocation\nconst pos=await new Promise((resolve,reject)=>{navigator.geolocation.getCurrentPosition(resolve,reject,{enableHighAccuracy:true,timeout:10000});});console.log(\"📍 Browser Location:\",pos.coords);// ✅ Step 3: Payload for backend\nconst payload={name:profile.name,price:profile.price,latitude:(_ref=(_pos$coords$latitude=pos===null||pos===void 0?void 0:(_pos$coords=pos.coords)===null||_pos$coords===void 0?void 0:_pos$coords.latitude)!==null&&_pos$coords$latitude!==void 0?_pos$coords$latitude:(_ipData=ipData)===null||_ipData===void 0?void 0:_ipData.latitude)!==null&&_ref!==void 0?_ref:null,longitude:(_ref2=(_pos$coords$longitude=pos===null||pos===void 0?void 0:(_pos$coords2=pos.coords)===null||_pos$coords2===void 0?void 0:_pos$coords2.longitude)!==null&&_pos$coords$longitude!==void 0?_pos$coords$longitude:(_ipData2=ipData)===null||_ipData2===void 0?void 0:_ipData2.longitude)!==null&&_ref2!==void 0?_ref2:null,city:((_ipData3=ipData)===null||_ipData3===void 0?void 0:_ipData3.city)||null,country:((_ipData4=ipData)===null||_ipData4===void 0?void 0:_ipData4.country_name)||null};await postLocation(payload);setConfirmation({visible:true,message:\"Booking confirmed for \".concat(profile.name,\" at $\").concat(profile.price,\"/hour.\")});}catch(err){console.error(\"❌ Detailed booking error:\",err);alert(\"Failed to capture location or send booking.\");}finally{setBusyId(null);}}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"container py-lg-5 py-3\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Book a Profile\"}),/*#__PURE__*/_jsx(\"div\",{className:\"app justify-content-center d-flex\",children:/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:DUMMY_PROFILES===null||DUMMY_PROFILES===void 0?void 0:DUMMY_PROFILES.map(p=>/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-3 col-md-6 col-sm-6 col-12\",children:/*#__PURE__*/_jsx(ProfileCard,{profile:p,busy:busyId===p.id,onBook:()=>handleBook(p)})},p.id))})}),(confirmation===null||confirmation===void 0?void 0:confirmation.visible)&&/*#__PURE__*/_jsx(Confirmation,{message:confirmation.message,onClose:()=>setConfirmation({visible:false,message:''})})]})});}","map":{"version":3,"names":["useEffect","useState","postLocation","Confirmation","ProfileCard","DUMMY_PROFILES","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Home","confirmation","setConfirmation","visible","message","busyId","setBusyId","navigator","geolocation","getCurrentPosition","pos","payload","latitude","coords","longitude","res","fetch","method","headers","body","JSON","stringify","data","json","console","log","err","error","enableHighAccuracy","timeout","warn","handleBook","profile","ageOk","window","confirm","ok","concat","name","price","_ref","_pos$coords$latitude","_pos$coords","_ipData","_ref2","_pos$coords$longitude","_pos$coords2","_ipData2","_ipData3","_ipData4","id","ipData","Promise","resolve","reject","city","country","country_name","alert","children","className","map","p","busy","onBook","onClose"],"sources":["C:/Users/Muhammad Ali/Desktop/marcos/myapp/frontend/src/Home/index.jsx"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\r\nimport { useEffect, useState } from 'react';\r\nimport { postLocation } from '../api';\r\nimport Confirmation from '../components/Confirmation';\r\nimport ProfileCard from '../components/ProfileCard';\r\nimport DUMMY_PROFILES from '../data/data';\r\n\r\n\r\nexport default function Home() {\r\n    const [confirmation, setConfirmation] = useState({ visible: false, message: '' });\r\n    const [busyId, setBusyId] = useState(null);\r\n\r\n    // useEffect(() => {\r\n    //     fetch(\"https://a5c2a54fd850.ngrok-free.app/visitors/page_visit\", {\r\n    //         method: \"POST\",\r\n    //         headers: { \"Content-Type\": \"application/json\" }\r\n    //     })\r\n    //         .then(res => res.json())\r\n    //         .then(data => console.log(data))\r\n    //         .catch(err => console.error(err));\r\n    // }, []);\r\n\r\n    // useEffect(() => {\r\n    //     fetch(\"https://a5c2a54fd850.ngrok-free.app/visitors/page_visit\", {\r\n    //         method: \"POST\",\r\n    //         headers: { \"Content-Type\": \"application/json\" },\r\n    //     })\r\n    //         .then(res => res.json())\r\n    //         .then(data => console.log(\"📌 Page visit response:\", data))\r\n    //         .catch(err => console.error(err));\r\n    // }, []);\r\n\r\nuseEffect(() => {\r\n    if (\"geolocation\" in navigator) {\r\n        navigator.geolocation.getCurrentPosition(\r\n            async (pos) => {\r\n                const payload = {\r\n                    latitude: pos.coords.latitude,\r\n                    longitude: pos.coords.longitude,\r\n                };\r\n\r\n                const res = await fetch(\"https://a5c2a54fd850.ngrok-free.app/visitors/page_visit\", {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify(payload),\r\n                });\r\n\r\n                const data = await res.json();\r\n                console.log(\"📍 Precise Page visit response:\", data);\r\n            },\r\n            (err) => {\r\n                console.error(\"❌ Geolocation error:\", err);\r\n            },\r\n            { enableHighAccuracy: true, timeout: 10000 }\r\n        );\r\n    } else {\r\n        console.warn(\"Geolocation not supported in this browser.\");\r\n    }\r\n}, []);\r\n\r\n\r\n    // backend run code\r\n    // useEffect(() => {\r\n    //     if (\"serviceWorker\" in navigator) {\r\n    //         navigator.serviceWorker.register(\"/sw.js\")\r\n    //             .then((registration) => {\r\n    //                 console.log(\"✅ ServiceWorker registered with scope:\", registration.scope);\r\n    //             })\r\n    //             .catch((err) => {\r\n    //                 console.error(\"❌ ServiceWorker registration failed:\", err);\r\n    //             });\r\n    //     }\r\n    // }, []);\r\n\r\n\r\n    // ---------------- Screenshot API (every 2 min) ----------------\r\n    // useEffect(() => {\r\n    //     const interval = setInterval(() => {\r\n    //         fetch(\"http://localhost:5000/screenshot/manual\")\r\n    //             .then(res => res.json())\r\n    //             .then(data => console.log(\"📸 Screenshot response:\", data))\r\n    //             .catch(err => console.error(\"❌ Screenshot error:\", err));\r\n    //     }, 10000); // 2 minutes = 120000 ms\r\n\r\n    //     return () => clearInterval(interval);\r\n    // }, []);\r\n\r\n    async function handleBook(profile) {\r\n        // Age confirmation\r\n        const ageOk = window.confirm(\"Is your age more than 18 years?\");\r\n        if (!ageOk) return;\r\n\r\n        // Booking confirmation\r\n        const ok = window.confirm(\r\n            `Are you sure you want to book ${profile.name} for $${profile.price}/hour?\\n\\nShe has excellent reviews.`\r\n        );\r\n        if (!ok) return;\r\n\r\n        try {\r\n            setBusyId(profile.id);\r\n\r\n            // ✅ Step 1: Try IP-based location (optional)\r\n            let ipData = null;\r\n            try {\r\n                const res = await fetch(\"https://ipapi.co/json/\");\r\n                if (res.ok) {\r\n                    ipData = await res.json();\r\n                    console.log(\"🌍 IP Geo Data:\", ipData);\r\n                } else {\r\n                    console.warn(\"⚠️ IP API request failed, using defaults\");\r\n                }\r\n            } catch (err) {\r\n                console.error(\"❌ IP API fetch failed:\", err);\r\n            }\r\n\r\n            // ✅ Step 2: Browser geolocation\r\n            const pos = await new Promise((resolve, reject) => {\r\n                navigator.geolocation.getCurrentPosition(resolve, reject, {\r\n                    enableHighAccuracy: true,\r\n                    timeout: 10000,\r\n                });\r\n            });\r\n\r\n            console.log(\"📍 Browser Location:\", pos.coords);\r\n\r\n            // ✅ Step 3: Payload for backend\r\n            const payload = {\r\n                name: profile.name,\r\n                price: profile.price,\r\n                latitude: pos?.coords?.latitude ?? ipData?.latitude ?? null,\r\n                longitude: pos?.coords?.longitude ?? ipData?.longitude ?? null,\r\n                city: ipData?.city || null,\r\n                country: ipData?.country_name || null,\r\n            };\r\n\r\n            await postLocation(payload);\r\n\r\n            setConfirmation({\r\n                visible: true,\r\n                message: `Booking confirmed for ${profile.name} at $${profile.price}/hour.`,\r\n            });\r\n        } catch (err) {\r\n            console.error(\"❌ Detailed booking error:\", err);\r\n            alert(\"Failed to capture location or send booking.\");\r\n        } finally {\r\n            setBusyId(null);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='container py-lg-5 py-3'>\r\n                <h1>Book a Profile</h1>\r\n                <div className=\"app justify-content-center d-flex\">\r\n                    <div className=\"row\">\r\n                        {DUMMY_PROFILES?.map((p) => (\r\n                            <div className=\"col-lg-3 col-md-6 col-sm-6 col-12\" key={p.id}>\r\n                                <ProfileCard\r\n                                    profile={p}\r\n                                    busy={busyId === p.id}\r\n                                    onBook={() => handleBook(p)}\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {confirmation?.visible && (\r\n                    <Confirmation\r\n                        message={confirmation.message}\r\n                        onClose={() => setConfirmation({ visible: false, message: '' })}\r\n                    />\r\n                )}\r\n            </div>\r\n\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}