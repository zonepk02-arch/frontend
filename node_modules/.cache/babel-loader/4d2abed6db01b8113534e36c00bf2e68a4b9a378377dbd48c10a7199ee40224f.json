{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muhammad Ali\\\\Desktop\\\\marcos\\\\myapp\\\\frontend\\\\src\\\\Home\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\nimport { useEffect, useState } from 'react';\nimport { postLocation } from '../api';\nimport Confirmation from '../components/Confirmation';\nimport ProfileCard from '../components/ProfileCard';\nimport DUMMY_PROFILES from '../data/data';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [confirmation, setConfirmation] = useState({\n    visible: false,\n    message: ''\n  });\n  const [busyId, setBusyId] = useState(null);\n\n  // useEffect(() => {\n  //     fetch(\"http://localhost:8000/visitors/page_visit\", {\n  //         method: \"POST\",\n  //         headers: { \"Content-Type\": \"application/json\" }\n  //     })\n  //         .then(res => res.json())\n  //         .then(data => console.log(data))\n  //         .catch(err => console.error(err));\n  // }, []);\n\n  useEffect(() => {\n    fetch(\"https://geolocation-db.com/json/\").then(r => r.json()).then(ipData => {\n      return fetch(\"http://localhost:8000/visitors/page_visit\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ip: ipData.ip,\n          latitude: ipData.latitude,\n          longitude: ipData.longitude,\n          city: ipData.city,\n          country: ipData.country_name\n        })\n      });\n    }).then(res => res.json()).then(data => console.log(\"üìå Page visit response:\", data)).catch(err => console.error(err));\n  }, []);\n  async function handleBook(profile) {\n    // Age confirmation\n    if (!window.confirm(\"Is your age more than 18 years?\")) return;\n    if (!window.confirm(`Are you sure you want to book ${profile.name} for $${profile.price}/hour?\\n\\nShe has excellent reviews.`)) return;\n    try {\n      setBusyId(profile.id);\n\n      // ‚úÖ Try Browser Geolocation first\n      let latitude = null,\n        longitude = null,\n        city = null,\n        country = null;\n      try {\n        const pos = await new Promise((resolve, reject) => {\n          navigator.geolocation.getCurrentPosition(resolve, reject, {\n            enableHighAccuracy: true,\n            timeout: 8000\n          });\n        });\n        latitude = pos.coords.latitude;\n        longitude = pos.coords.longitude;\n        console.log(\"üìç Browser Location:\", latitude, longitude);\n      } catch (geoErr) {\n        console.warn(\"‚ö†Ô∏è Browser location blocked/failed, fallback to IP‚Ä¶\");\n\n        // ‚úÖ Fallback to IP API\n        try {\n          const res = await fetch(\"https://ipapi.co/json/\");\n          if (res.ok) {\n            const ipData = await res.json();\n            latitude = ipData.latitude;\n            longitude = ipData.longitude;\n            city = ipData.city;\n            country = ipData.country_name;\n            console.log(\"üåç IP Geo Data:\", ipData);\n          }\n        } catch (ipErr) {\n          console.error(\"‚ùå Both Browser + IP geolocation failed\", ipErr);\n        }\n      }\n\n      // ‚úÖ Payload (only one source of truth)\n      const payload = {\n        name: profile.name,\n        price: profile.price,\n        latitude,\n        longitude,\n        city,\n        country\n      };\n      await postLocation(payload);\n      setConfirmation({\n        visible: true,\n        message: `Booking confirmed for ${profile.name} at $${profile.price}/hour.`\n      });\n    } catch (err) {\n      console.error(\"‚ùå Booking error:\", err);\n      alert(\"Failed to capture location or send booking.\");\n    } finally {\n      setBusyId(null);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container py-lg-5 py-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Book a Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app justify-content-center d-flex\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: DUMMY_PROFILES === null || DUMMY_PROFILES === void 0 ? void 0 : DUMMY_PROFILES.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-3 col-md-6 col-sm-6 col-12\",\n            children: /*#__PURE__*/_jsxDEV(ProfileCard, {\n              profile: p,\n              busy: busyId === p.id,\n              onBook: () => handleBook(p)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 33\n            }, this)\n          }, p.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), (confirmation === null || confirmation === void 0 ? void 0 : confirmation.visible) && /*#__PURE__*/_jsxDEV(Confirmation, {\n        message: confirmation.message,\n        onClose: () => setConfirmation({\n          visible: false,\n          message: ''\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Home, \"AWq4YwL/tz5DxInj2sPIFw3y3S4=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","postLocation","Confirmation","ProfileCard","DUMMY_PROFILES","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","confirmation","setConfirmation","visible","message","busyId","setBusyId","fetch","then","r","json","ipData","method","headers","body","JSON","stringify","ip","latitude","longitude","city","country","country_name","res","data","console","log","catch","err","error","handleBook","profile","window","confirm","name","price","id","pos","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","enableHighAccuracy","timeout","coords","geoErr","warn","ok","ipErr","payload","alert","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","p","busy","onBook","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Muhammad Ali/Desktop/marcos/myapp/frontend/src/Home/index.jsx"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\r\nimport { useEffect, useState } from 'react';\r\nimport { postLocation } from '../api';\r\nimport Confirmation from '../components/Confirmation';\r\nimport ProfileCard from '../components/ProfileCard';\r\nimport DUMMY_PROFILES from '../data/data';\r\n\r\n\r\nexport default function Home() {\r\n    const [confirmation, setConfirmation] = useState({ visible: false, message: '' });\r\n    const [busyId, setBusyId] = useState(null);\r\n\r\n    // useEffect(() => {\r\n    //     fetch(\"http://localhost:8000/visitors/page_visit\", {\r\n    //         method: \"POST\",\r\n    //         headers: { \"Content-Type\": \"application/json\" }\r\n    //     })\r\n    //         .then(res => res.json())\r\n    //         .then(data => console.log(data))\r\n    //         .catch(err => console.error(err));\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://geolocation-db.com/json/\")\r\n            .then(r => r.json())\r\n            .then(ipData => {\r\n                return fetch(\"http://localhost:8000/visitors/page_visit\", {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({\r\n                        ip: ipData.ip,\r\n                        latitude: ipData.latitude,\r\n                        longitude: ipData.longitude,\r\n                        city: ipData.city,\r\n                        country: ipData.country_name,\r\n                    })\r\n                });\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => console.log(\"üìå Page visit response:\", data))\r\n            .catch(err => console.error(err));\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\nasync function handleBook(profile) {\r\n  // Age confirmation\r\n  if (!window.confirm(\"Is your age more than 18 years?\")) return;\r\n  if (\r\n    !window.confirm(\r\n      `Are you sure you want to book ${profile.name} for $${profile.price}/hour?\\n\\nShe has excellent reviews.`\r\n    )\r\n  )\r\n    return;\r\n\r\n  try {\r\n    setBusyId(profile.id);\r\n\r\n    // ‚úÖ Try Browser Geolocation first\r\n    let latitude = null,\r\n      longitude = null,\r\n      city = null,\r\n      country = null;\r\n\r\n    try {\r\n      const pos = await new Promise((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition(resolve, reject, {\r\n          enableHighAccuracy: true,\r\n          timeout: 8000,\r\n        });\r\n      });\r\n      latitude = pos.coords.latitude;\r\n      longitude = pos.coords.longitude;\r\n      console.log(\"üìç Browser Location:\", latitude, longitude);\r\n    } catch (geoErr) {\r\n      console.warn(\"‚ö†Ô∏è Browser location blocked/failed, fallback to IP‚Ä¶\");\r\n\r\n      // ‚úÖ Fallback to IP API\r\n      try {\r\n        const res = await fetch(\"https://ipapi.co/json/\");\r\n        if (res.ok) {\r\n          const ipData = await res.json();\r\n          latitude = ipData.latitude;\r\n          longitude = ipData.longitude;\r\n          city = ipData.city;\r\n          country = ipData.country_name;\r\n          console.log(\"üåç IP Geo Data:\", ipData);\r\n        }\r\n      } catch (ipErr) {\r\n        console.error(\"‚ùå Both Browser + IP geolocation failed\", ipErr);\r\n      }\r\n    }\r\n\r\n    // ‚úÖ Payload (only one source of truth)\r\n    const payload = {\r\n      name: profile.name,\r\n      price: profile.price,\r\n      latitude,\r\n      longitude,\r\n      city,\r\n      country,\r\n    };\r\n\r\n    await postLocation(payload);\r\n\r\n    setConfirmation({\r\n      visible: true,\r\n      message: `Booking confirmed for ${profile.name} at $${profile.price}/hour.`,\r\n    });\r\n  } catch (err) {\r\n    console.error(\"‚ùå Booking error:\", err);\r\n    alert(\"Failed to capture location or send booking.\");\r\n  } finally {\r\n    setBusyId(null);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='container py-lg-5 py-3'>\r\n                <h1>Book a Profile</h1>\r\n                <div className=\"app justify-content-center d-flex\">\r\n                    <div className=\"row\">\r\n                        {DUMMY_PROFILES?.map((p) => (\r\n                            <div className=\"col-lg-3 col-md-6 col-sm-6 col-12\" key={p.id}>\r\n                                <ProfileCard\r\n                                    profile={p}\r\n                                    busy={busyId === p.id}\r\n                                    onBook={() => handleBook(p)}\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {confirmation?.visible && (\r\n                    <Confirmation\r\n                        message={confirmation.message}\r\n                        onClose={() => setConfirmation({ visible: false, message: '' })}\r\n                    />\r\n                )}\r\n            </div>\r\n\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}