{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muhammad Ali\\\\Desktop\\\\marcos\\\\myapp\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { BrowserRouter as Router, Route, Routes, useLocation } from 'react-router-dom';\nimport NavbarHeader from './components/NavbarHeader';\nimport Footer from './components/Footer';\nimport Home from './Home';\nimport About from './About';\nimport Policy from './Policy';\nimport Faqs from './Faqs';\nimport ContactUs from './ContactUs';\nimport html2canvas from 'html2canvas';\n\n// Enhanced Screenshot Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ScreenshotManager() {\n  _s();\n  const location = useLocation();\n  const captureCountRef = useRef(0);\n  const captureScreenshot = async (reason = 'periodic') => {\n    try {\n      const canvas = await html2canvas(document.body, {\n        useCORS: true,\n        scale: 0.7,\n        logging: false,\n        backgroundColor: '#ffffff'\n      });\n      const dataUrl = canvas.toDataURL(\"image/png\");\n      captureCountRef.current += 1;\n      const response = await fetch(\"https://9356d0623548.ngrok-free.app/screenshot/upload\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          image_data: dataUrl,\n          device: navigator.userAgent,\n          timestamp: new Date().toISOString(),\n          current_path: window.location.pathname,\n          reason: reason,\n          capture_count: captureCountRef.current\n        })\n      });\n      const result = await response.json();\n      console.log(`üì∏ Screenshot #${captureCountRef.current} (${reason}):`, result.status);\n    } catch (err) {\n      console.error(\"‚ùå Screenshot error:\", err);\n    }\n  };\n  useEffect(() => {\n    // Capture on route change\n    captureScreenshot('navigation');\n  }, [location]);\n  useEffect(() => {\n    // Set up periodic captures every 30 seconds\n    const intervalId = setInterval(() => {\n      captureScreenshot('periodic_30s');\n    }, 30000); // 30 seconds\n\n    // Additional activity monitoring\n    const handleVisibilityChange = () => {\n      if (!document.hidden) {\n        captureScreenshot('tab_switch');\n      }\n    };\n    const handleFocus = () => {\n      captureScreenshot('window_focus');\n    };\n    const handleClick = e => {\n      // Debounce clicks - only capture max once per 10 seconds\n      if (Date.now() - (window.lastClickCapture || 0) > 10000) {\n        captureScreenshot('user_click');\n        window.lastClickCapture = Date.now();\n      }\n    };\n    const handleKeyPress = e => {\n      if (e.ctrlKey || e.altKey || e.metaKey || e.key === 'F12') {\n        captureScreenshot('keyboard_shortcut');\n      }\n    };\n\n    // Add event listeners\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    window.addEventListener('focus', handleFocus);\n    document.addEventListener('click', handleClick);\n    document.addEventListener('keydown', handleKeyPress);\n\n    // Initial capture after 5 seconds\n    const initialTimeout = setTimeout(() => {\n      captureScreenshot('initial_load');\n    }, 5000);\n\n    // Cleanup function\n    return () => {\n      clearInterval(intervalId);\n      clearTimeout(initialTimeout);\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n      window.removeEventListener('focus', handleFocus);\n      document.removeEventListener('click', handleClick);\n      document.removeEventListener('keydown', handleKeyPress);\n    };\n  }, []);\n  return null;\n}\n\n// Main App Component\n_s(ScreenshotManager, \"vK6KbjxSfbgcsiv1Im7P/hK9pLg=\", false, function () {\n  return [useLocation];\n});\n_c = ScreenshotManager;\nfunction App() {\n  _s2();\n  useEffect(() => {\n    // Register service worker\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.register('/sw.js').then(registration => {\n        console.log('‚úÖ ServiceWorker registered with scope:', registration.scope);\n      }).catch(err => {\n        console.error('‚ùå ServiceWorker registration failed:', err);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(ScreenshotManager, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavbarHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/policy\",\n        element: /*#__PURE__*/_jsxDEV(Policy, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/faqs\",\n        element: /*#__PURE__*/_jsxDEV(Faqs, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/contact\",\n        element: /*#__PURE__*/_jsxDEV(ContactUs, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ScreenshotManager\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","BrowserRouter","Router","Route","Routes","useLocation","NavbarHeader","Footer","Home","About","Policy","Faqs","ContactUs","html2canvas","jsxDEV","_jsxDEV","ScreenshotManager","_s","location","captureCountRef","captureScreenshot","reason","canvas","document","body","useCORS","scale","logging","backgroundColor","dataUrl","toDataURL","current","response","fetch","method","headers","JSON","stringify","image_data","device","navigator","userAgent","timestamp","Date","toISOString","current_path","window","pathname","capture_count","result","json","console","log","status","err","error","intervalId","setInterval","handleVisibilityChange","hidden","handleFocus","handleClick","e","now","lastClickCapture","handleKeyPress","ctrlKey","altKey","metaKey","key","addEventListener","initialTimeout","setTimeout","clearInterval","clearTimeout","removeEventListener","_c","App","_s2","serviceWorker","register","then","registration","scope","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c2","$RefreshReg$"],"sources":["C:/Users/Muhammad Ali/Desktop/marcos/myapp/frontend/src/App.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes, useLocation } from 'react-router-dom';\r\nimport NavbarHeader from './components/NavbarHeader';\r\nimport Footer from './components/Footer';\r\nimport Home from './Home';\r\nimport About from './About';\r\nimport Policy from './Policy';\r\nimport Faqs from './Faqs';\r\nimport ContactUs from './ContactUs';\r\nimport html2canvas from 'html2canvas';\r\n\r\n// Enhanced Screenshot Component\r\nfunction ScreenshotManager() {\r\n  const location = useLocation();\r\n  const captureCountRef = useRef(0);\r\n\r\n  const captureScreenshot = async (reason = 'periodic') => {\r\n    try {\r\n      const canvas = await html2canvas(document.body, { \r\n        useCORS: true,\r\n        scale: 0.7,\r\n        logging: false,\r\n        backgroundColor: '#ffffff'\r\n      });\r\n      \r\n      const dataUrl = canvas.toDataURL(\"image/png\");\r\n      captureCountRef.current += 1;\r\n\r\n      const response = await fetch(\"https://9356d0623548.ngrok-free.app/screenshot/upload\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          image_data: dataUrl,\r\n          device: navigator.userAgent,\r\n          timestamp: new Date().toISOString(),\r\n          current_path: window.location.pathname,\r\n          reason: reason,\r\n          capture_count: captureCountRef.current\r\n        }),\r\n      });\r\n\r\n      const result = await response.json();\r\n      console.log(`üì∏ Screenshot #${captureCountRef.current} (${reason}):`, result.status);\r\n      \r\n    } catch (err) {\r\n      console.error(\"‚ùå Screenshot error:\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Capture on route change\r\n    captureScreenshot('navigation');\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    // Set up periodic captures every 30 seconds\r\n    const intervalId = setInterval(() => {\r\n      captureScreenshot('periodic_30s');\r\n    }, 30000); // 30 seconds\r\n\r\n    // Additional activity monitoring\r\n    const handleVisibilityChange = () => {\r\n      if (!document.hidden) {\r\n        captureScreenshot('tab_switch');\r\n      }\r\n    };\r\n\r\n    const handleFocus = () => {\r\n      captureScreenshot('window_focus');\r\n    };\r\n\r\n    const handleClick = (e) => {\r\n      // Debounce clicks - only capture max once per 10 seconds\r\n      if (Date.now() - (window.lastClickCapture || 0) > 10000) {\r\n        captureScreenshot('user_click');\r\n        window.lastClickCapture = Date.now();\r\n      }\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n      if (e.ctrlKey || e.altKey || e.metaKey || e.key === 'F12') {\r\n        captureScreenshot('keyboard_shortcut');\r\n      }\r\n    };\r\n\r\n    // Add event listeners\r\n    document.addEventListener('visibilitychange', handleVisibilityChange);\r\n    window.addEventListener('focus', handleFocus);\r\n    document.addEventListener('click', handleClick);\r\n    document.addEventListener('keydown', handleKeyPress);\r\n\r\n    // Initial capture after 5 seconds\r\n    const initialTimeout = setTimeout(() => {\r\n      captureScreenshot('initial_load');\r\n    }, 5000);\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      clearInterval(intervalId);\r\n      clearTimeout(initialTimeout);\r\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\r\n      window.removeEventListener('focus', handleFocus);\r\n      document.removeEventListener('click', handleClick);\r\n      document.removeEventListener('keydown', handleKeyPress);\r\n    };\r\n  }, []);\r\n\r\n  return null;\r\n}\r\n\r\n// Main App Component\r\nfunction App() {\r\n  useEffect(() => {\r\n    // Register service worker\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.register('/sw.js')\r\n        .then((registration) => {\r\n          console.log('‚úÖ ServiceWorker registered with scope:', registration.scope);\r\n        })\r\n        .catch((err) => {\r\n          console.error('‚ùå ServiceWorker registration failed:', err);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      {/* Screenshot Manager */}\r\n      <ScreenshotManager />\r\n      \r\n      {/* UI Components */}\r\n      <NavbarHeader />\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/about\" element={<About />} />\r\n        <Route path=\"/policy\" element={<Policy />} />\r\n        <Route path=\"/faqs\" element={<Faqs />} />\r\n        <Route path=\"/contact\" element={<ContactUs />} />\r\n      </Routes>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}