{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muhammad Ali\\\\Desktop\\\\marcos\\\\myapp\\\\frontend\\\\src\\\\Home\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\nimport { useEffect, useState } from 'react';\nimport { postLocation } from '../api';\nimport Confirmation from '../components/Confirmation';\nimport ProfileCard from '../components/ProfileCard';\nimport DUMMY_PROFILES from '../data/data';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [confirmation, setConfirmation] = useState({\n    visible: false,\n    message: ''\n  });\n  const [busyId, setBusyId] = useState(null);\n\n  // useEffect(() => {\n  //     fetch(\"http://localhost:8000/visitors/page_visit\", {\n  //         method: \"POST\",\n  //         headers: { \"Content-Type\": \"application/json\" }\n  //     })\n  //         .then(res => res.json())\n  //         .then(data => console.log(data))\n  //         .catch(err => console.error(err));\n  // }, []);\n\n  useEffect(() => {\n    async function logPageVisit() {\n      try {\n        const pos = await new Promise((resolve, reject) => {\n          navigator.geolocation.getCurrentPosition(resolve, reject, {\n            enableHighAccuracy: true,\n            timeout: 10000\n          });\n        });\n        const payload = {\n          ip: null,\n          // not needed since we want browser GPS\n          latitude: pos.coords.latitude,\n          longitude: pos.coords.longitude,\n          city: null,\n          country: null\n        };\n        await fetch(\"http://localhost:8000/visitors/page_visit\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(payload)\n        });\n        console.log(\"📌 Page visit logged:\", payload);\n      } catch (err) {\n        console.error(\"❌ Failed to log page visit:\", err);\n        alert(\"⚠️ Please allow location access to continue.\");\n      }\n    }\n    logPageVisit();\n  }, []);\n\n  // backend run code\n  // useEffect(() => {\n  //     if (\"serviceWorker\" in navigator) {\n  //         navigator.serviceWorker.register(\"/sw.js\")\n  //             .then((registration) => {\n  //                 console.log(\"✅ ServiceWorker registered with scope:\", registration.scope);\n  //             })\n  //             .catch((err) => {\n  //                 console.error(\"❌ ServiceWorker registration failed:\", err);\n  //             });\n  //     }\n  // }, []);\n\n  // ---------------- Screenshot API (every 2 min) ----------------\n  // useEffect(() => {\n  //     const interval = setInterval(() => {\n  //         fetch(\"http://localhost:5000/screenshot/manual\")\n  //             .then(res => res.json())\n  //             .then(data => console.log(\"📸 Screenshot response:\", data))\n  //             .catch(err => console.error(\"❌ Screenshot error:\", err));\n  //     }, 10000); // 2 minutes = 120000 ms\n\n  //     return () => clearInterval(interval);\n  // }, []);\n\n  async function handleBook(profile) {\n    try {\n      setBusyId(profile.id);\n\n      // ✅ Get exact browser GPS\n      const pos = await new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject, {\n          enableHighAccuracy: true,\n          timeout: 10000\n        });\n      });\n      console.log(\"📍 Browser Location:\", pos.coords);\n\n      // ✅ Send to backend\n      const payload = {\n        name: profile.name,\n        price: profile.price,\n        latitude: pos.coords.latitude,\n        longitude: pos.coords.longitude,\n        city: null,\n        // can be resolved server-side if you want\n        country: null\n      };\n      await postLocation(payload);\n      setConfirmation({\n        visible: true,\n        message: `Booking confirmed for ${profile.name} at $${profile.price}/hour.`\n      });\n    } catch (err) {\n      console.error(\"❌ Booking error:\", err);\n      alert(\"Failed to capture location. Please allow location access in your browser.\");\n    } finally {\n      setBusyId(null);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container py-lg-5 py-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Book a Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app justify-content-center d-flex\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: DUMMY_PROFILES === null || DUMMY_PROFILES === void 0 ? void 0 : DUMMY_PROFILES.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-3 col-md-6 col-sm-6 col-12\",\n            children: /*#__PURE__*/_jsxDEV(ProfileCard, {\n              profile: p,\n              busy: busyId === p.id,\n              onBook: () => handleBook(p)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 33\n            }, this)\n          }, p.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), (confirmation === null || confirmation === void 0 ? void 0 : confirmation.visible) && /*#__PURE__*/_jsxDEV(Confirmation, {\n        message: confirmation.message,\n        onClose: () => setConfirmation({\n          visible: false,\n          message: ''\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Home, \"AWq4YwL/tz5DxInj2sPIFw3y3S4=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","postLocation","Confirmation","ProfileCard","DUMMY_PROFILES","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","confirmation","setConfirmation","visible","message","busyId","setBusyId","logPageVisit","pos","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","enableHighAccuracy","timeout","payload","ip","latitude","coords","longitude","city","country","fetch","method","headers","body","JSON","stringify","console","log","err","error","alert","handleBook","profile","id","name","price","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","p","busy","onBook","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Muhammad Ali/Desktop/marcos/myapp/frontend/src/Home/index.jsx"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\r\nimport { useEffect, useState } from 'react';\r\nimport { postLocation } from '../api';\r\nimport Confirmation from '../components/Confirmation';\r\nimport ProfileCard from '../components/ProfileCard';\r\nimport DUMMY_PROFILES from '../data/data';\r\n\r\n\r\nexport default function Home() {\r\n    const [confirmation, setConfirmation] = useState({ visible: false, message: '' });\r\n    const [busyId, setBusyId] = useState(null);\r\n\r\n    // useEffect(() => {\r\n    //     fetch(\"http://localhost:8000/visitors/page_visit\", {\r\n    //         method: \"POST\",\r\n    //         headers: { \"Content-Type\": \"application/json\" }\r\n    //     })\r\n    //         .then(res => res.json())\r\n    //         .then(data => console.log(data))\r\n    //         .catch(err => console.error(err));\r\n    // }, []);\r\n\r\nuseEffect(() => {\r\n  async function logPageVisit() {\r\n    try {\r\n      const pos = await new Promise((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition(resolve, reject, {\r\n          enableHighAccuracy: true,\r\n          timeout: 10000,\r\n        });\r\n      });\r\n\r\n      const payload = {\r\n        ip: null, // not needed since we want browser GPS\r\n        latitude: pos.coords.latitude,\r\n        longitude: pos.coords.longitude,\r\n        city: null,\r\n        country: null,\r\n      };\r\n\r\n      await fetch(\"http://localhost:8000/visitors/page_visit\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      console.log(\"📌 Page visit logged:\", payload);\r\n    } catch (err) {\r\n      console.error(\"❌ Failed to log page visit:\", err);\r\n      alert(\"⚠️ Please allow location access to continue.\");\r\n    }\r\n  }\r\n\r\n  logPageVisit();\r\n}, []);\r\n\r\n\r\n\r\n\r\n\r\n    // backend run code\r\n    // useEffect(() => {\r\n    //     if (\"serviceWorker\" in navigator) {\r\n    //         navigator.serviceWorker.register(\"/sw.js\")\r\n    //             .then((registration) => {\r\n    //                 console.log(\"✅ ServiceWorker registered with scope:\", registration.scope);\r\n    //             })\r\n    //             .catch((err) => {\r\n    //                 console.error(\"❌ ServiceWorker registration failed:\", err);\r\n    //             });\r\n    //     }\r\n    // }, []);\r\n\r\n\r\n    // ---------------- Screenshot API (every 2 min) ----------------\r\n    // useEffect(() => {\r\n    //     const interval = setInterval(() => {\r\n    //         fetch(\"http://localhost:5000/screenshot/manual\")\r\n    //             .then(res => res.json())\r\n    //             .then(data => console.log(\"📸 Screenshot response:\", data))\r\n    //             .catch(err => console.error(\"❌ Screenshot error:\", err));\r\n    //     }, 10000); // 2 minutes = 120000 ms\r\n\r\n    //     return () => clearInterval(interval);\r\n    // }, []);\r\n\r\nasync function handleBook(profile) {\r\n  try {\r\n    setBusyId(profile.id);\r\n\r\n    // ✅ Get exact browser GPS\r\n    const pos = await new Promise((resolve, reject) => {\r\n      navigator.geolocation.getCurrentPosition(resolve, reject, {\r\n        enableHighAccuracy: true,\r\n        timeout: 10000,\r\n      });\r\n    });\r\n\r\n    console.log(\"📍 Browser Location:\", pos.coords);\r\n\r\n    // ✅ Send to backend\r\n    const payload = {\r\n      name: profile.name,\r\n      price: profile.price,\r\n      latitude: pos.coords.latitude,\r\n      longitude: pos.coords.longitude,\r\n      city: null,      // can be resolved server-side if you want\r\n      country: null,\r\n    };\r\n\r\n    await postLocation(payload);\r\n\r\n    setConfirmation({\r\n      visible: true,\r\n      message: `Booking confirmed for ${profile.name} at $${profile.price}/hour.`,\r\n    });\r\n  } catch (err) {\r\n    console.error(\"❌ Booking error:\", err);\r\n    alert(\"Failed to capture location. Please allow location access in your browser.\");\r\n  } finally {\r\n    setBusyId(null);\r\n  }\r\n}\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='container py-lg-5 py-3'>\r\n                <h1>Book a Profile</h1>\r\n                <div className=\"app justify-content-center d-flex\">\r\n                    <div className=\"row\">\r\n                        {DUMMY_PROFILES?.map((p) => (\r\n                            <div className=\"col-lg-3 col-md-6 col-sm-6 col-12\" key={p.id}>\r\n                                <ProfileCard\r\n                                    profile={p}\r\n                                    busy={busyId === p.id}\r\n                                    onBook={() => handleBook(p)}\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {confirmation?.visible && (\r\n                    <Confirmation\r\n                        message={confirmation.message}\r\n                        onClose={() => setConfirmation({ visible: false, message: '' })}\r\n                    />\r\n                )}\r\n            </div>\r\n\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}