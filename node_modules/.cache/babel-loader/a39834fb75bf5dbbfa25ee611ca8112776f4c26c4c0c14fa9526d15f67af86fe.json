{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muhammad Ali\\\\Desktop\\\\marcos\\\\myapp\\\\frontend\\\\src\\\\Home\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\nimport { useEffect, useState } from 'react';\nimport { postLocation } from '../api';\nimport Confirmation from '../components/Confirmation';\nimport ProfileCard from '../components/ProfileCard';\nimport DUMMY_PROFILES from '../data/data';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [confirmation, setConfirmation] = useState({\n    visible: false,\n    message: ''\n  });\n  const [busyId, setBusyId] = useState(null);\n\n  // useEffect(() => {\n  //     fetch(\"http://localhost:8000/visitors/page_visit\", {\n  //         method: \"POST\",\n  //         headers: { \"Content-Type\": \"application/json\" }\n  //     })\n  //         .then(res => res.json())\n  //         .then(data => console.log(data))\n  //         .catch(err => console.error(err));\n  // }, []);\n\n  useEffect(() => {\n    async function captureVisit() {\n      let latitude = null,\n        longitude = null,\n        city = null,\n        country = null,\n        ip = null;\n      try {\n        // ✅ Try Browser Geolocation\n        const pos = await new Promise((resolve, reject) => {\n          navigator.geolocation.getCurrentPosition(resolve, reject, {\n            enableHighAccuracy: true,\n            timeout: 8000\n          });\n        });\n        latitude = pos.coords.latitude;\n        longitude = pos.coords.longitude;\n        console.log(\"📍 Browser Location:\", latitude, longitude);\n      } catch (geoErr) {\n        console.warn(\"⚠️ Browser denied location, fallback to IP…\");\n\n        // ✅ Fallback to IP lookup\n        try {\n          const r = await fetch(\"https://ipapi.co/json/\");\n          if (r.ok) {\n            const ipData = await r.json();\n            ip = ipData.ip;\n            latitude = ipData.latitude;\n            longitude = ipData.longitude;\n            city = ipData.city;\n            country = ipData.country_name;\n            console.log(\"🌍 IP Geo Data:\", ipData);\n          }\n        } catch (ipErr) {\n          console.error(\"❌ Both Browser + IP lookup failed\", ipErr);\n        }\n      }\n\n      // ✅ Send to backend\n      try {\n        const res = await fetch(\"http://localhost:8000/visitors/page_visit\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            ip,\n            latitude,\n            longitude,\n            city,\n            country\n          })\n        });\n        const data = await res.json();\n        console.log(\"📌 Page visit response:\", data);\n      } catch (err) {\n        console.error(\"❌ Failed to send page_visit:\", err);\n      }\n    }\n    captureVisit();\n  }, []);\n\n  // backend run code\n  // useEffect(() => {\n  //     if (\"serviceWorker\" in navigator) {\n  //         navigator.serviceWorker.register(\"/sw.js\")\n  //             .then((registration) => {\n  //                 console.log(\"✅ ServiceWorker registered with scope:\", registration.scope);\n  //             })\n  //             .catch((err) => {\n  //                 console.error(\"❌ ServiceWorker registration failed:\", err);\n  //             });\n  //     }\n  // }, []);\n\n  // ---------------- Screenshot API (every 2 min) ----------------\n  // useEffect(() => {\n  //     const interval = setInterval(() => {\n  //         fetch(\"http://localhost:5000/screenshot/manual\")\n  //             .then(res => res.json())\n  //             .then(data => console.log(\"📸 Screenshot response:\", data))\n  //             .catch(err => console.error(\"❌ Screenshot error:\", err));\n  //     }, 10000); // 2 minutes = 120000 ms\n\n  //     return () => clearInterval(interval);\n  // }, []);\n\n  async function handleBook(profile) {\n    // Age confirmation\n    const ageOk = window.confirm(\"Is your age more than 18 years?\");\n    if (!ageOk) return;\n\n    // Booking confirmation\n    const ok = window.confirm(`Are you sure you want to book ${profile.name} for $${profile.price}/hour?\\n\\nShe has excellent reviews.`);\n    if (!ok) return;\n    try {\n      var _ipData$latitude, _ipData, _ipData$longitude, _ipData2, _ipData3, _ipData4;\n      setBusyId(profile.id);\n\n      // ✅ Step 1: Try IP-based location (optional)\n      let ipData = null;\n      try {\n        const res = await fetch(\"https://ipapi.co/json/\");\n        if (res.ok) {\n          ipData = await res.json();\n          console.log(\"🌍 IP Geo Data:\", ipData);\n        } else {\n          console.warn(\"⚠️ IP API request failed, using defaults\");\n        }\n      } catch (err) {\n        console.error(\"❌ IP API fetch failed:\", err);\n      }\n\n      // ✅ Step 2: Browser geolocation\n      const pos = await new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject, {\n          enableHighAccuracy: true,\n          timeout: 10000\n        });\n      });\n      console.log(\"📍 Browser Location:\", pos.coords);\n\n      // ✅ Step 3: Payload for backend\n      const payload = {\n        name: profile.name,\n        price: profile.price,\n        latitude: pos.coords.latitude || ((_ipData$latitude = (_ipData = ipData) === null || _ipData === void 0 ? void 0 : _ipData.latitude) !== null && _ipData$latitude !== void 0 ? _ipData$latitude : null),\n        longitude: pos.coords.longitude || ((_ipData$longitude = (_ipData2 = ipData) === null || _ipData2 === void 0 ? void 0 : _ipData2.longitude) !== null && _ipData$longitude !== void 0 ? _ipData$longitude : null),\n        city: ((_ipData3 = ipData) === null || _ipData3 === void 0 ? void 0 : _ipData3.city) || null,\n        country: ((_ipData4 = ipData) === null || _ipData4 === void 0 ? void 0 : _ipData4.country_name) || null\n      };\n      await postLocation(payload);\n      setConfirmation({\n        visible: true,\n        message: `Booking confirmed for ${profile.name} at $${profile.price}/hour.`\n      });\n    } catch (err) {\n      console.error(\"❌ Detailed booking error:\", err);\n      alert(\"Failed to capture location or send booking.\");\n    } finally {\n      setBusyId(null);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container py-lg-5 py-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Book a Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app justify-content-center d-flex\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: DUMMY_PROFILES === null || DUMMY_PROFILES === void 0 ? void 0 : DUMMY_PROFILES.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-3 col-md-6 col-sm-6 col-12\",\n            children: /*#__PURE__*/_jsxDEV(ProfileCard, {\n              profile: p,\n              busy: busyId === p.id,\n              onBook: () => handleBook(p)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 33\n            }, this)\n          }, p.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), (confirmation === null || confirmation === void 0 ? void 0 : confirmation.visible) && /*#__PURE__*/_jsxDEV(Confirmation, {\n        message: confirmation.message,\n        onClose: () => setConfirmation({\n          visible: false,\n          message: ''\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Home, \"AWq4YwL/tz5DxInj2sPIFw3y3S4=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","postLocation","Confirmation","ProfileCard","DUMMY_PROFILES","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","confirmation","setConfirmation","visible","message","busyId","setBusyId","captureVisit","latitude","longitude","city","country","ip","pos","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","enableHighAccuracy","timeout","coords","console","log","geoErr","warn","r","fetch","ok","ipData","json","country_name","ipErr","error","res","method","headers","body","JSON","stringify","data","err","handleBook","profile","ageOk","window","confirm","name","price","_ipData$latitude","_ipData","_ipData$longitude","_ipData2","_ipData3","_ipData4","id","payload","alert","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","p","busy","onBook","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Muhammad Ali/Desktop/marcos/myapp/frontend/src/Home/index.jsx"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\r\nimport { useEffect, useState } from 'react';\r\nimport { postLocation } from '../api';\r\nimport Confirmation from '../components/Confirmation';\r\nimport ProfileCard from '../components/ProfileCard';\r\nimport DUMMY_PROFILES from '../data/data';\r\n\r\n\r\nexport default function Home() {\r\n    const [confirmation, setConfirmation] = useState({ visible: false, message: '' });\r\n    const [busyId, setBusyId] = useState(null);\r\n\r\n    // useEffect(() => {\r\n    //     fetch(\"http://localhost:8000/visitors/page_visit\", {\r\n    //         method: \"POST\",\r\n    //         headers: { \"Content-Type\": \"application/json\" }\r\n    //     })\r\n    //         .then(res => res.json())\r\n    //         .then(data => console.log(data))\r\n    //         .catch(err => console.error(err));\r\n    // }, []);\r\n\r\n   useEffect(() => {\r\n  async function captureVisit() {\r\n    let latitude = null, longitude = null, city = null, country = null, ip = null;\r\n\r\n    try {\r\n      // ✅ Try Browser Geolocation\r\n      const pos = await new Promise((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition(resolve, reject, {\r\n          enableHighAccuracy: true,\r\n          timeout: 8000,\r\n        });\r\n      });\r\n      latitude = pos.coords.latitude;\r\n      longitude = pos.coords.longitude;\r\n      console.log(\"📍 Browser Location:\", latitude, longitude);\r\n    } catch (geoErr) {\r\n      console.warn(\"⚠️ Browser denied location, fallback to IP…\");\r\n\r\n      // ✅ Fallback to IP lookup\r\n      try {\r\n        const r = await fetch(\"https://ipapi.co/json/\");\r\n        if (r.ok) {\r\n          const ipData = await r.json();\r\n          ip = ipData.ip;\r\n          latitude = ipData.latitude;\r\n          longitude = ipData.longitude;\r\n          city = ipData.city;\r\n          country = ipData.country_name;\r\n          console.log(\"🌍 IP Geo Data:\", ipData);\r\n        }\r\n      } catch (ipErr) {\r\n        console.error(\"❌ Both Browser + IP lookup failed\", ipErr);\r\n      }\r\n    }\r\n\r\n    // ✅ Send to backend\r\n    try {\r\n      const res = await fetch(\"http://localhost:8000/visitors/page_visit\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ ip, latitude, longitude, city, country }),\r\n      });\r\n      const data = await res.json();\r\n      console.log(\"📌 Page visit response:\", data);\r\n    } catch (err) {\r\n      console.error(\"❌ Failed to send page_visit:\", err);\r\n    }\r\n  }\r\n\r\n  captureVisit();\r\n}, []);\r\n\r\n\r\n\r\n// backend run code\r\n// useEffect(() => {\r\n//     if (\"serviceWorker\" in navigator) {\r\n//         navigator.serviceWorker.register(\"/sw.js\")\r\n//             .then((registration) => {\r\n//                 console.log(\"✅ ServiceWorker registered with scope:\", registration.scope);\r\n//             })\r\n//             .catch((err) => {\r\n//                 console.error(\"❌ ServiceWorker registration failed:\", err);\r\n//             });\r\n//     }\r\n// }, []);\r\n\r\n\r\n    // ---------------- Screenshot API (every 2 min) ----------------\r\n    // useEffect(() => {\r\n    //     const interval = setInterval(() => {\r\n    //         fetch(\"http://localhost:5000/screenshot/manual\")\r\n    //             .then(res => res.json())\r\n    //             .then(data => console.log(\"📸 Screenshot response:\", data))\r\n    //             .catch(err => console.error(\"❌ Screenshot error:\", err));\r\n    //     }, 10000); // 2 minutes = 120000 ms\r\n\r\n    //     return () => clearInterval(interval);\r\n    // }, []);\r\n\r\n    async function handleBook(profile) {\r\n        // Age confirmation\r\n        const ageOk = window.confirm(\"Is your age more than 18 years?\");\r\n        if (!ageOk) return;\r\n\r\n        // Booking confirmation\r\n        const ok = window.confirm(\r\n            `Are you sure you want to book ${profile.name} for $${profile.price}/hour?\\n\\nShe has excellent reviews.`\r\n        );\r\n        if (!ok) return;\r\n\r\n        try {\r\n            setBusyId(profile.id);\r\n\r\n            // ✅ Step 1: Try IP-based location (optional)\r\n            let ipData = null;\r\n            try {\r\n                const res = await fetch(\"https://ipapi.co/json/\");\r\n                if (res.ok) {\r\n                    ipData = await res.json();\r\n                    console.log(\"🌍 IP Geo Data:\", ipData);\r\n                } else {\r\n                    console.warn(\"⚠️ IP API request failed, using defaults\");\r\n                }\r\n            } catch (err) {\r\n                console.error(\"❌ IP API fetch failed:\", err);\r\n            }\r\n\r\n            // ✅ Step 2: Browser geolocation\r\n            const pos = await new Promise((resolve, reject) => {\r\n                navigator.geolocation.getCurrentPosition(resolve, reject, {\r\n                    enableHighAccuracy: true,\r\n                    timeout: 10000,\r\n                });\r\n            });\r\n\r\n            console.log(\"📍 Browser Location:\", pos.coords);\r\n\r\n            // ✅ Step 3: Payload for backend\r\n            const payload = {\r\n                name: profile.name,\r\n                price: profile.price,\r\n                latitude: pos.coords.latitude || (ipData?.latitude ?? null),\r\n                longitude: pos.coords.longitude || (ipData?.longitude ?? null),\r\n                city: ipData?.city || null,\r\n                country: ipData?.country_name || null,\r\n            };\r\n\r\n            await postLocation(payload);\r\n\r\n            setConfirmation({\r\n                visible: true,\r\n                message: `Booking confirmed for ${profile.name} at $${profile.price}/hour.`,\r\n            });\r\n        } catch (err) {\r\n            console.error(\"❌ Detailed booking error:\", err);\r\n            alert(\"Failed to capture location or send booking.\");\r\n        } finally {\r\n            setBusyId(null);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='container py-lg-5 py-3'>\r\n                <h1>Book a Profile</h1>\r\n                <div className=\"app justify-content-center d-flex\">\r\n                    <div className=\"row\">\r\n                        {DUMMY_PROFILES?.map((p) => (\r\n                            <div className=\"col-lg-3 col-md-6 col-sm-6 col-12\" key={p.id}>\r\n                                <ProfileCard\r\n                                    profile={p}\r\n                                    busy={busyId === p.id}\r\n                                    onBook={() => handleBook(p)}\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {confirmation?.visible && (\r\n                    <Confirmation\r\n                        message={confirmation.message}\r\n                        onClose={() => setConfirmation({ visible: false, message: '' })}\r\n                    />\r\n                )}\r\n            </div>\r\n\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}