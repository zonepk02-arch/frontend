{"ast":null,"code":"import'bootstrap/dist/css/bootstrap.min.css';import'bootstrap/dist/js/bootstrap.bundle.min.js';import html2canvas from\"html2canvas\";import{useEffect,useRef,useState}from'react';import{Route,BrowserRouter as Router,Routes,useLocation}from'react-router-dom';import\"slick-carousel/slick/slick-theme.css\";import\"slick-carousel/slick/slick.css\";import About from'../src/About';import Home from'../src/Home';import Policy from'../src/Policy';import\"./assets/app.css\";import Footer from\"./components/Footer\";import NavbarHeader from'./components/NavbarHeader';import ContactUs from'./ContactUs';import Faqs from'./Faqs';// Enhanced ScreenshotWatcher Component\n// function ScreenshotWatcher() {\n//     const location = useLocation();\n//     const lastCaptureRef = useRef(0);\n//     const minInterval = 10000; // 10 seconds between captures\n//     const [success, setSuccess] = useState(false);\n//     const captureScreenshot = async (reason = 'activity') => {\n//         const now = Date.now();\n//         if (now - lastCaptureRef.current < minInterval) return;  // prevent too frequent\n//         lastCaptureRef.current = now;\n//         try {\n//             const canvas = await html2canvas(document.body);\n//             const dataUrl = canvas.toDataURL(\"image/png\");\n//             // Send the screenshot data to the FastAPI endpoint\n//             const response = await fetch(\"https://775307f1e41d.ngrok-free.app/screenshot/upload\", {\n//                 method: \"POST\",\n//                 headers: { \"Content-Type\": \"application/json\" },\n//                 body: JSON.stringify({ image_data: dataUrl })\n//             });\n//             console.log(`ðŸ“¸ Screenshot sent (${reason})`);\n//         } catch (err) {\n//             console.error(\"Screen capture failed:\", err);\n//         }\n//     };\n//     useEffect(() => {\n//         const captureScreenshotOnClose = async () => {\n//             await captureScreenshot('window_close');\n//         };\n//         window.addEventListener(\"beforeunload\", captureScreenshotOnClose);\n//         return () => {\n//             window.removeEventListener(\"beforeunload\", captureScreenshotOnClose);\n//         };\n//     }, []);\n//     useEffect(() => {\n//         // Capture on route change\n//         captureScreenshot('navigation');\n//         // Event listeners for all activities\n//         const handleKeyPress = (e) => {\n//             if (e.key.length === 1 || e.key.startsWith('F') || e.ctrlKey || e.altKey || e.metaKey) {\n//                 captureScreenshot('keyboard_activity');\n//             }\n//         };\n//         const handleMouseClick = (e) => {\n//             captureScreenshot('mouse_click');\n//         };\n//         const handleFormInput = (e) => {\n//             if (['INPUT', 'TEXTAREA', 'SELECT'].includes(e.target.tagName)) {\n//                 captureScreenshot('form_interaction');\n//             }\n//         };\n//         const handleVisibilityChange = () => {\n//             if (!document.hidden) {\n//                 captureScreenshot('tab_switch');\n//             }\n//         };\n//         const handleResize = () => {\n//             captureScreenshot('window_resize');\n//         };\n//         const handleScroll = () => {\n//             captureScreenshot('scroll_activity');\n//         };\n//         // Add event listeners\n//         document.addEventListener('keydown', handleKeyPress);\n//         document.addEventListener('click', handleMouseClick);\n//         document.addEventListener('input', handleFormInput);\n//         document.addEventListener('change', handleFormInput);\n//         document.addEventListener('visibilitychange', handleVisibilityChange);\n//         window.addEventListener('resize', handleResize);\n//         window.addEventListener('scroll', handleScroll);\n//         // Periodic captures\n//         const periodicInterval = setInterval(() => {\n//             captureScreenshot('periodic');\n//         }, 30000);\n//         // Cleanup\n//         return () => {\n//             document.removeEventListener('keydown', handleKeyPress);\n//             document.removeEventListener('click', handleMouseClick);\n//             document.removeEventListener('input', handleFormInput);\n//             document.removeEventListener('change', handleFormInput);\n//             document.removeEventListener('visibilitychange', handleVisibilityChange);\n//             window.removeEventListener('resize', handleResize);\n//             window.removeEventListener('scroll', handleScroll);\n//             clearInterval(periodicInterval);\n//         };\n//     }, [location]);\n//     return null;\n// }\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function App(){return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(NavbarHeader,{}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Home,{})}),/*#__PURE__*/_jsx(Route,{path:\"/about\",element:/*#__PURE__*/_jsx(About,{})}),/*#__PURE__*/_jsx(Route,{path:\"/policy\",element:/*#__PURE__*/_jsx(Policy,{})}),/*#__PURE__*/_jsx(Route,{path:\"/faqs\",element:/*#__PURE__*/_jsx(Faqs,{})}),/*#__PURE__*/_jsx(Route,{path:\"/contact\",element:/*#__PURE__*/_jsx(ContactUs,{})})]}),/*#__PURE__*/_jsx(Footer,{})]})});}","map":{"version":3,"names":["html2canvas","useEffect","useRef","useState","Route","BrowserRouter","Router","Routes","useLocation","About","Home","Policy","Footer","NavbarHeader","ContactUs","Faqs","jsx","_jsx","jsxs","_jsxs","App","children","path","element"],"sources":["C:/Users/Muhammad Ali/Desktop/marcos/myapp/frontend/src/App.jsx"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\r\nimport html2canvas from \"html2canvas\";\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Route, BrowserRouter as Router, Routes, useLocation } from 'react-router-dom';\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport About from '../src/About';\r\nimport Home from '../src/Home';\r\nimport Policy from '../src/Policy';\r\nimport \"./assets/app.css\";\r\nimport Footer from \"./components/Footer\";\r\nimport NavbarHeader from './components/NavbarHeader';\r\nimport ContactUs from './ContactUs';\r\nimport Faqs from './Faqs';\r\n\r\n// Enhanced ScreenshotWatcher Component\r\n// function ScreenshotWatcher() {\r\n//     const location = useLocation();\r\n//     const lastCaptureRef = useRef(0);\r\n//     const minInterval = 10000; // 10 seconds between captures\r\n\r\n//     const [success, setSuccess] = useState(false);\r\n\r\n//     const captureScreenshot = async (reason = 'activity') => {\r\n//         const now = Date.now();\r\n//         if (now - lastCaptureRef.current < minInterval) return;  // prevent too frequent\r\n//         lastCaptureRef.current = now;\r\n\r\n//         try {\r\n//             const canvas = await html2canvas(document.body);\r\n//             const dataUrl = canvas.toDataURL(\"image/png\");\r\n\r\n//             // Send the screenshot data to the FastAPI endpoint\r\n//             const response = await fetch(\"https://775307f1e41d.ngrok-free.app/screenshot/upload\", {\r\n//                 method: \"POST\",\r\n//                 headers: { \"Content-Type\": \"application/json\" },\r\n//                 body: JSON.stringify({ image_data: dataUrl })\r\n//             });\r\n\r\n//             console.log(`ðŸ“¸ Screenshot sent (${reason})`);\r\n//         } catch (err) {\r\n//             console.error(\"Screen capture failed:\", err);\r\n//         }\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         const captureScreenshotOnClose = async () => {\r\n//             await captureScreenshot('window_close');\r\n//         };\r\n\r\n//         window.addEventListener(\"beforeunload\", captureScreenshotOnClose);\r\n\r\n//         return () => {\r\n//             window.removeEventListener(\"beforeunload\", captureScreenshotOnClose);\r\n//         };\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         // Capture on route change\r\n//         captureScreenshot('navigation');\r\n\r\n//         // Event listeners for all activities\r\n//         const handleKeyPress = (e) => {\r\n//             if (e.key.length === 1 || e.key.startsWith('F') || e.ctrlKey || e.altKey || e.metaKey) {\r\n//                 captureScreenshot('keyboard_activity');\r\n//             }\r\n//         };\r\n\r\n//         const handleMouseClick = (e) => {\r\n//             captureScreenshot('mouse_click');\r\n//         };\r\n\r\n//         const handleFormInput = (e) => {\r\n//             if (['INPUT', 'TEXTAREA', 'SELECT'].includes(e.target.tagName)) {\r\n//                 captureScreenshot('form_interaction');\r\n//             }\r\n//         };\r\n\r\n//         const handleVisibilityChange = () => {\r\n//             if (!document.hidden) {\r\n//                 captureScreenshot('tab_switch');\r\n//             }\r\n//         };\r\n\r\n//         const handleResize = () => {\r\n//             captureScreenshot('window_resize');\r\n//         };\r\n\r\n//         const handleScroll = () => {\r\n//             captureScreenshot('scroll_activity');\r\n//         };\r\n\r\n//         // Add event listeners\r\n//         document.addEventListener('keydown', handleKeyPress);\r\n//         document.addEventListener('click', handleMouseClick);\r\n//         document.addEventListener('input', handleFormInput);\r\n//         document.addEventListener('change', handleFormInput);\r\n//         document.addEventListener('visibilitychange', handleVisibilityChange);\r\n//         window.addEventListener('resize', handleResize);\r\n//         window.addEventListener('scroll', handleScroll);\r\n\r\n//         // Periodic captures\r\n//         const periodicInterval = setInterval(() => {\r\n//             captureScreenshot('periodic');\r\n//         }, 30000);\r\n\r\n//         // Cleanup\r\n//         return () => {\r\n//             document.removeEventListener('keydown', handleKeyPress);\r\n//             document.removeEventListener('click', handleMouseClick);\r\n//             document.removeEventListener('input', handleFormInput);\r\n//             document.removeEventListener('change', handleFormInput);\r\n//             document.removeEventListener('visibilitychange', handleVisibilityChange);\r\n//             window.removeEventListener('resize', handleResize);\r\n//             window.removeEventListener('scroll', handleScroll);\r\n//             clearInterval(periodicInterval);\r\n//         };\r\n//     }, [location]);\r\n\r\n//     return null;\r\n// }\r\n\r\nexport default function App() {\r\n    return (\r\n        <Router>\r\n            {/* <ScreenshotWatcher /> */}\r\n\r\n            <div>\r\n                <NavbarHeader />\r\n                <Routes>\r\n                    <Route path=\"/\" element={<Home />} />\r\n                    <Route path=\"/about\" element={<About />} />\r\n                    <Route path=\"/policy\" element={<Policy />} />\r\n                    <Route path=\"/faqs\" element={<Faqs />} />\r\n                    <Route path=\"/contact\" element={<ContactUs />} />\r\n                </Routes>\r\n                <Footer />\r\n            </div>\r\n        </Router>\r\n    );\r\n}"],"mappings":"AAAA,MAAO,sCAAsC,CAC7C,MAAO,2CAA2C,CAClD,MAAO,CAAAA,WAAW,KAAM,aAAa,CACrC,OAASC,SAAS,CAAEC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CACnD,OAASC,KAAK,CAAEC,aAAa,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,WAAW,KAAQ,kBAAkB,CACtF,MAAO,sCAAsC,CAC7C,MAAO,gCAAgC,CACvC,MAAO,CAAAC,KAAK,KAAM,cAAc,CAChC,MAAO,CAAAC,IAAI,KAAM,aAAa,CAC9B,MAAO,CAAAC,MAAM,KAAM,eAAe,CAClC,MAAO,kBAAkB,CACzB,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,YAAY,KAAM,2BAA2B,CACpD,MAAO,CAAAC,SAAS,KAAM,aAAa,CACnC,MAAO,CAAAC,IAAI,KAAM,QAAQ,CAEzB;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEA,cAAe,SAAS,CAAAC,GAAGA,CAAA,CAAG,CAC1B,mBACIH,IAAA,CAACX,MAAM,EAAAe,QAAA,cAGHF,KAAA,QAAAE,QAAA,eACIJ,IAAA,CAACJ,YAAY,GAAE,CAAC,cAChBM,KAAA,CAACZ,MAAM,EAAAc,QAAA,eACHJ,IAAA,CAACb,KAAK,EAACkB,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEN,IAAA,CAACP,IAAI,GAAE,CAAE,CAAE,CAAC,cACrCO,IAAA,CAACb,KAAK,EAACkB,IAAI,CAAC,QAAQ,CAACC,OAAO,cAAEN,IAAA,CAACR,KAAK,GAAE,CAAE,CAAE,CAAC,cAC3CQ,IAAA,CAACb,KAAK,EAACkB,IAAI,CAAC,SAAS,CAACC,OAAO,cAAEN,IAAA,CAACN,MAAM,GAAE,CAAE,CAAE,CAAC,cAC7CM,IAAA,CAACb,KAAK,EAACkB,IAAI,CAAC,OAAO,CAACC,OAAO,cAAEN,IAAA,CAACF,IAAI,GAAE,CAAE,CAAE,CAAC,cACzCE,IAAA,CAACb,KAAK,EAACkB,IAAI,CAAC,UAAU,CAACC,OAAO,cAAEN,IAAA,CAACH,SAAS,GAAE,CAAE,CAAE,CAAC,EAC7C,CAAC,cACTG,IAAA,CAACL,MAAM,GAAE,CAAC,EACT,CAAC,CACF,CAAC,CAEjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}