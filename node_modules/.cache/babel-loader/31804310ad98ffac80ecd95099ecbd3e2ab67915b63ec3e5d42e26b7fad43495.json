{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muhammad Ali\\\\Desktop\\\\marcos\\\\myapp\\\\frontend\\\\src\\\\Home\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\nimport { useEffect, useState } from 'react';\nimport { postLocation } from '../api';\nimport Confirmation from '../components/Confirmation';\nimport ProfileCard from '../components/ProfileCard';\nimport DUMMY_PROFILES from '../data/data';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [confirmation, setConfirmation] = useState({\n    visible: false,\n    message: ''\n  });\n  const [busyId, setBusyId] = useState(null);\n\n  // useEffect(() => {\n  //     fetch(\"http://localhost:8000/visitors/page_visit\", {\n  //         method: \"POST\",\n  //         headers: { \"Content-Type\": \"application/json\" }\n  //     })\n  //         .then(res => res.json())\n  //         .then(data => console.log(data))\n  //         .catch(err => console.error(err));\n  // }, []);\n\n  useEffect(() => {\n    fetch(\"https://geolocation-db.com/json/\").then(r => r.json()).then(ipData => {\n      return fetch(\"http://localhost:8000/visitors/page_visit\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ip: ipData.ip,\n          latitude: ipData.latitude,\n          longitude: ipData.longitude,\n          city: ipData.city,\n          country: ipData.country_name\n        })\n      });\n    }).then(res => res.json()).then(data => console.log(\"📌 Page visit response:\", data)).catch(err => console.error(err));\n  }, []);\n\n  // ---------------- Screenshot API (every 2 min) ----------------\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetch(\"http://localhost:5000/screenshot/manual\").then(res => res.json()).then(data => console.log(\"📸 Screenshot response:\", data)).catch(err => console.error(\"❌ Screenshot error:\", err));\n    }, 120000); // 2 minutes = 120000 ms\n\n    return () => clearInterval(interval);\n  }, []);\n  async function handleBook(profile) {\n    // Age confirmation\n    const ageOk = window.confirm(\"Is your age more than 18 years?\");\n    if (!ageOk) return;\n\n    // Booking confirmation\n    const ok = window.confirm(`Are you sure you want to book ${profile.name} for $${profile.price}/hour?\\n\\nShe has excellent reviews.`);\n    if (!ok) return;\n    try {\n      var _ipData$latitude, _ipData, _ipData$longitude, _ipData2, _ipData3, _ipData4;\n      setBusyId(profile.id);\n\n      // ✅ Step 1: Try IP-based location (optional)\n      let ipData = null;\n      try {\n        const res = await fetch(\"https://ipapi.co/json/\");\n        if (res.ok) {\n          ipData = await res.json();\n          console.log(\"🌍 IP Geo Data:\", ipData);\n        } else {\n          console.warn(\"⚠️ IP API request failed, using defaults\");\n        }\n      } catch (err) {\n        console.error(\"❌ IP API fetch failed:\", err);\n      }\n\n      // ✅ Step 2: Browser geolocation\n      const pos = await new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject, {\n          enableHighAccuracy: true,\n          timeout: 10000\n        });\n      });\n      console.log(\"📍 Browser Location:\", pos.coords);\n\n      // ✅ Step 3: Payload for backend\n      const payload = {\n        name: profile.name,\n        price: profile.price,\n        latitude: pos.coords.latitude || ((_ipData$latitude = (_ipData = ipData) === null || _ipData === void 0 ? void 0 : _ipData.latitude) !== null && _ipData$latitude !== void 0 ? _ipData$latitude : null),\n        longitude: pos.coords.longitude || ((_ipData$longitude = (_ipData2 = ipData) === null || _ipData2 === void 0 ? void 0 : _ipData2.longitude) !== null && _ipData$longitude !== void 0 ? _ipData$longitude : null),\n        city: ((_ipData3 = ipData) === null || _ipData3 === void 0 ? void 0 : _ipData3.city) || null,\n        country: ((_ipData4 = ipData) === null || _ipData4 === void 0 ? void 0 : _ipData4.country_name) || null\n      };\n      await postLocation(payload);\n      setConfirmation({\n        visible: true,\n        message: `Booking confirmed for ${profile.name} at $${profile.price}/hour.`\n      });\n    } catch (err) {\n      console.error(\"❌ Detailed booking error:\", err);\n      alert(\"Failed to capture location or send booking.\");\n    } finally {\n      setBusyId(null);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container py-lg-5 py-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Book a Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app justify-content-center d-flex\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: DUMMY_PROFILES === null || DUMMY_PROFILES === void 0 ? void 0 : DUMMY_PROFILES.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-3 col-md-6 col-sm-6 col-12\",\n            children: /*#__PURE__*/_jsxDEV(ProfileCard, {\n              profile: p,\n              busy: busyId === p.id,\n              onBook: () => handleBook(p)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 33\n            }, this)\n          }, p.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), (confirmation === null || confirmation === void 0 ? void 0 : confirmation.visible) && /*#__PURE__*/_jsxDEV(Confirmation, {\n        message: confirmation.message,\n        onClose: () => setConfirmation({\n          visible: false,\n          message: ''\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Home, \"WsS0Okt4lQy/5bR7pmOdtl3lw0M=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","postLocation","Confirmation","ProfileCard","DUMMY_PROFILES","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","confirmation","setConfirmation","visible","message","busyId","setBusyId","fetch","then","r","json","ipData","method","headers","body","JSON","stringify","ip","latitude","longitude","city","country","country_name","res","data","console","log","catch","err","error","interval","setInterval","clearInterval","handleBook","profile","ageOk","window","confirm","ok","name","price","_ipData$latitude","_ipData","_ipData$longitude","_ipData2","_ipData3","_ipData4","id","warn","pos","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","enableHighAccuracy","timeout","coords","payload","alert","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","p","busy","onBook","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Muhammad Ali/Desktop/marcos/myapp/frontend/src/Home/index.jsx"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\r\nimport { useEffect, useState } from 'react';\r\nimport { postLocation } from '../api';\r\nimport Confirmation from '../components/Confirmation';\r\nimport ProfileCard from '../components/ProfileCard';\r\nimport DUMMY_PROFILES from '../data/data';\r\n\r\n\r\nexport default function Home() {\r\n    const [confirmation, setConfirmation] = useState({ visible: false, message: '' });\r\n    const [busyId, setBusyId] = useState(null);\r\n\r\n    // useEffect(() => {\r\n    //     fetch(\"http://localhost:8000/visitors/page_visit\", {\r\n    //         method: \"POST\",\r\n    //         headers: { \"Content-Type\": \"application/json\" }\r\n    //     })\r\n    //         .then(res => res.json())\r\n    //         .then(data => console.log(data))\r\n    //         .catch(err => console.error(err));\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://geolocation-db.com/json/\")\r\n            .then(r => r.json())\r\n            .then(ipData => {\r\n                return fetch(\"http://localhost:8000/visitors/page_visit\", {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({\r\n                        ip: ipData.ip,\r\n                        latitude: ipData.latitude,\r\n                        longitude: ipData.longitude,\r\n                        city: ipData.city,\r\n                        country: ipData.country_name,\r\n                    })\r\n                });\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => console.log(\"📌 Page visit response:\", data))\r\n            .catch(err => console.error(err));\r\n    }, []);\r\n\r\n    // ---------------- Screenshot API (every 2 min) ----------------\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            fetch(\"http://localhost:5000/screenshot/manual\")\r\n                .then(res => res.json())\r\n                .then(data => console.log(\"📸 Screenshot response:\", data))\r\n                .catch(err => console.error(\"❌ Screenshot error:\", err));\r\n        }, 120000); // 2 minutes = 120000 ms\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n\r\n    async function handleBook(profile) {\r\n        // Age confirmation\r\n        const ageOk = window.confirm(\"Is your age more than 18 years?\");\r\n        if (!ageOk) return;\r\n\r\n        // Booking confirmation\r\n        const ok = window.confirm(\r\n            `Are you sure you want to book ${profile.name} for $${profile.price}/hour?\\n\\nShe has excellent reviews.`\r\n        );\r\n        if (!ok) return;\r\n\r\n        try {\r\n            setBusyId(profile.id);\r\n\r\n            // ✅ Step 1: Try IP-based location (optional)\r\n            let ipData = null;\r\n            try {\r\n                const res = await fetch(\"https://ipapi.co/json/\");\r\n                if (res.ok) {\r\n                    ipData = await res.json();\r\n                    console.log(\"🌍 IP Geo Data:\", ipData);\r\n                } else {\r\n                    console.warn(\"⚠️ IP API request failed, using defaults\");\r\n                }\r\n            } catch (err) {\r\n                console.error(\"❌ IP API fetch failed:\", err);\r\n            }\r\n\r\n            // ✅ Step 2: Browser geolocation\r\n            const pos = await new Promise((resolve, reject) => {\r\n                navigator.geolocation.getCurrentPosition(resolve, reject, {\r\n                    enableHighAccuracy: true,\r\n                    timeout: 10000,\r\n                });\r\n            });\r\n\r\n            console.log(\"📍 Browser Location:\", pos.coords);\r\n\r\n            // ✅ Step 3: Payload for backend\r\n            const payload = {\r\n                name: profile.name,\r\n                price: profile.price,\r\n                latitude: pos.coords.latitude || (ipData?.latitude ?? null),\r\n                longitude: pos.coords.longitude || (ipData?.longitude ?? null),\r\n                city: ipData?.city || null,\r\n                country: ipData?.country_name || null,\r\n            };\r\n\r\n            await postLocation(payload);\r\n\r\n            setConfirmation({\r\n                visible: true,\r\n                message: `Booking confirmed for ${profile.name} at $${profile.price}/hour.`,\r\n            });\r\n        } catch (err) {\r\n            console.error(\"❌ Detailed booking error:\", err);\r\n            alert(\"Failed to capture location or send booking.\");\r\n        } finally {\r\n            setBusyId(null);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='container py-lg-5 py-3'>\r\n                <h1>Book a Profile</h1>\r\n                <div className=\"app justify-content-center d-flex\">\r\n                    <div className=\"row\">\r\n                        {DUMMY_PROFILES?.map((p) => (\r\n                            <div className=\"col-lg-3 col-md-6 col-sm-6 col-12\" key={p.id}>\r\n                                <ProfileCard\r\n                                    profile={p}\r\n                                    busy={busyId === p.id}\r\n                                    onBook={() => handleBook(p)}\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {confirmation?.visible && (\r\n                    <Confirmation\r\n                        message={confirmation.message}\r\n                        onClose={() => setConfirmation({ visible: false, message: '' })}\r\n                    />\r\n                )}\r\n            </div>\r\n\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAO,sCAAsC;AAC7C,OAAO,2CAA2C;AAClD,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,YAAY,QAAQ,QAAQ;AACrC,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,cAAc,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG1C,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC;IAAEa,OAAO,EAAE,KAAK;IAAEC,OAAO,EAAE;EAAG,CAAC,CAAC;EACjF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;;EAE1C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAD,SAAS,CAAC,MAAM;IACZkB,KAAK,CAAC,kCAAkC,CAAC,CACpCC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CACnBF,IAAI,CAACG,MAAM,IAAI;MACZ,OAAOJ,KAAK,CAAC,2CAA2C,EAAE;QACtDK,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,EAAE,EAAEN,MAAM,CAACM,EAAE;UACbC,QAAQ,EAAEP,MAAM,CAACO,QAAQ;UACzBC,SAAS,EAAER,MAAM,CAACQ,SAAS;UAC3BC,IAAI,EAAET,MAAM,CAACS,IAAI;UACjBC,OAAO,EAAEV,MAAM,CAACW;QACpB,CAAC;MACL,CAAC,CAAC;IACN,CAAC,CAAC,CACDd,IAAI,CAACe,GAAG,IAAIA,GAAG,CAACb,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACgB,IAAI,IAAIC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,IAAI,CAAC,CAAC,CAC1DG,KAAK,CAACC,GAAG,IAAIH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAvC,SAAS,CAAC,MAAM;IACZ,MAAMyC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BxB,KAAK,CAAC,yCAAyC,CAAC,CAC3CC,IAAI,CAACe,GAAG,IAAIA,GAAG,CAACb,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACgB,IAAI,IAAIC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,IAAI,CAAC,CAAC,CAC1DG,KAAK,CAACC,GAAG,IAAIH,OAAO,CAACI,KAAK,CAAC,qBAAqB,EAAED,GAAG,CAAC,CAAC;IAChE,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;;IAEZ,OAAO,MAAMI,aAAa,CAACF,QAAQ,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAGN,eAAeG,UAAUA,CAACC,OAAO,EAAE;IAC/B;IACA,MAAMC,KAAK,GAAGC,MAAM,CAACC,OAAO,CAAC,iCAAiC,CAAC;IAC/D,IAAI,CAACF,KAAK,EAAE;;IAEZ;IACA,MAAMG,EAAE,GAAGF,MAAM,CAACC,OAAO,CACrB,iCAAiCH,OAAO,CAACK,IAAI,SAASL,OAAO,CAACM,KAAK,sCACvE,CAAC;IACD,IAAI,CAACF,EAAE,EAAE;IAET,IAAI;MAAA,IAAAG,gBAAA,EAAAC,OAAA,EAAAC,iBAAA,EAAAC,QAAA,EAAAC,QAAA,EAAAC,QAAA;MACAxC,SAAS,CAAC4B,OAAO,CAACa,EAAE,CAAC;;MAErB;MACA,IAAIpC,MAAM,GAAG,IAAI;MACjB,IAAI;QACA,MAAMY,GAAG,GAAG,MAAMhB,KAAK,CAAC,wBAAwB,CAAC;QACjD,IAAIgB,GAAG,CAACe,EAAE,EAAE;UACR3B,MAAM,GAAG,MAAMY,GAAG,CAACb,IAAI,CAAC,CAAC;UACzBe,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEf,MAAM,CAAC;QAC1C,CAAC,MAAM;UACHc,OAAO,CAACuB,IAAI,CAAC,0CAA0C,CAAC;QAC5D;MACJ,CAAC,CAAC,OAAOpB,GAAG,EAAE;QACVH,OAAO,CAACI,KAAK,CAAC,wBAAwB,EAAED,GAAG,CAAC;MAChD;;MAEA;MACA,MAAMqB,GAAG,GAAG,MAAM,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QAC/CC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAACJ,OAAO,EAAEC,MAAM,EAAE;UACtDI,kBAAkB,EAAE,IAAI;UACxBC,OAAO,EAAE;QACb,CAAC,CAAC;MACN,CAAC,CAAC;MAEFhC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEuB,GAAG,CAACS,MAAM,CAAC;;MAE/C;MACA,MAAMC,OAAO,GAAG;QACZpB,IAAI,EAAEL,OAAO,CAACK,IAAI;QAClBC,KAAK,EAAEN,OAAO,CAACM,KAAK;QACpBtB,QAAQ,EAAE+B,GAAG,CAACS,MAAM,CAACxC,QAAQ,MAAAuB,gBAAA,IAAAC,OAAA,GAAK/B,MAAM,cAAA+B,OAAA,uBAANA,OAAA,CAAQxB,QAAQ,cAAAuB,gBAAA,cAAAA,gBAAA,GAAI,IAAI,CAAC;QAC3DtB,SAAS,EAAE8B,GAAG,CAACS,MAAM,CAACvC,SAAS,MAAAwB,iBAAA,IAAAC,QAAA,GAAKjC,MAAM,cAAAiC,QAAA,uBAANA,QAAA,CAAQzB,SAAS,cAAAwB,iBAAA,cAAAA,iBAAA,GAAI,IAAI,CAAC;QAC9DvB,IAAI,EAAE,EAAAyB,QAAA,GAAAlC,MAAM,cAAAkC,QAAA,uBAANA,QAAA,CAAQzB,IAAI,KAAI,IAAI;QAC1BC,OAAO,EAAE,EAAAyB,QAAA,GAAAnC,MAAM,cAAAmC,QAAA,uBAANA,QAAA,CAAQxB,YAAY,KAAI;MACrC,CAAC;MAED,MAAM/B,YAAY,CAACoE,OAAO,CAAC;MAE3BzD,eAAe,CAAC;QACZC,OAAO,EAAE,IAAI;QACbC,OAAO,EAAE,yBAAyB8B,OAAO,CAACK,IAAI,QAAQL,OAAO,CAACM,KAAK;MACvE,CAAC,CAAC;IACN,CAAC,CAAC,OAAOZ,GAAG,EAAE;MACVH,OAAO,CAACI,KAAK,CAAC,2BAA2B,EAAED,GAAG,CAAC;MAC/CgC,KAAK,CAAC,6CAA6C,CAAC;IACxD,CAAC,SAAS;MACNtD,SAAS,CAAC,IAAI,CAAC;IACnB;EACJ;EAOA,oBACIV,OAAA,CAAAE,SAAA;IAAA+D,QAAA,eACIjE,OAAA;MAAKkE,SAAS,EAAC,wBAAwB;MAAAD,QAAA,gBACnCjE,OAAA;QAAAiE,QAAA,EAAI;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBtE,OAAA;QAAKkE,SAAS,EAAC,mCAAmC;QAAAD,QAAA,eAC9CjE,OAAA;UAAKkE,SAAS,EAAC,KAAK;UAAAD,QAAA,EACfnE,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEyE,GAAG,CAAEC,CAAC,iBACnBxE,OAAA;YAAKkE,SAAS,EAAC,mCAAmC;YAAAD,QAAA,eAC9CjE,OAAA,CAACH,WAAW;cACRyC,OAAO,EAAEkC,CAAE;cACXC,IAAI,EAAEhE,MAAM,KAAK+D,CAAC,CAACrB,EAAG;cACtBuB,MAAM,EAAEA,CAAA,KAAMrC,UAAU,CAACmC,CAAC;YAAE;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/B;UAAC,GALkDE,CAAC,CAACrB,EAAE;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMvD,CACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,EAGL,CAAAjE,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEE,OAAO,kBAClBP,OAAA,CAACJ,YAAY;QACTY,OAAO,EAAEH,YAAY,CAACG,OAAQ;QAC9BmE,OAAO,EAAEA,CAAA,KAAMrE,eAAe,CAAC;UAAEC,OAAO,EAAE,KAAK;UAAEC,OAAO,EAAE;QAAG,CAAC;MAAE;QAAA2D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE,CACJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC,gBAER,CAAC;AAIX;AAAClE,EAAA,CAlJuBD,IAAI;AAAAyE,EAAA,GAAJzE,IAAI;AAAA,IAAAyE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}