{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muhammad Ali\\\\Desktop\\\\marcos\\\\myapp\\\\frontend\\\\src\\\\App.jsx\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\nimport html2canvas from \"html2canvas\";\nimport { useEffect, useRef, useState } from 'react';\nimport { Route, BrowserRouter as Router, Routes, useLocation } from 'react-router-dom';\nimport \"slick-carousel/slick/slick-theme.css\";\nimport \"slick-carousel/slick/slick.css\";\nimport About from '../src/About';\nimport Home from '../src/Home';\nimport Policy from '../src/Policy';\nimport \"./assets/app.css\";\nimport Footer from \"./components/Footer\";\nimport NavbarHeader from './components/NavbarHeader';\nimport ContactUs from './ContactUs';\nimport Faqs from './Faqs';\n\n// Enhanced ScreenshotWatcher Component\n// function ScreenshotWatcher() {\n//     const location = useLocation();\n//     const lastCaptureRef = useRef(0);\n//     const minInterval = 10000; // 10 seconds between captures\n\n//     const [success, setSuccess] = useState(false);\n\n//     const captureScreenshot = async (reason = 'activity') => {\n//         const now = Date.now();\n//         if (now - lastCaptureRef.current < minInterval) return;  // prevent too frequent\n//         lastCaptureRef.current = now;\n\n//         try {\n//             const canvas = await html2canvas(document.body);\n//             const dataUrl = canvas.toDataURL(\"image/png\");\n\n//             // Send the screenshot data to the FastAPI endpoint\n//             const response = await fetch(\"https://775307f1e41d.ngrok-free.app/screenshot/upload\", {\n//                 method: \"POST\",\n//                 headers: { \"Content-Type\": \"application/json\" },\n//                 body: JSON.stringify({ image_data: dataUrl })\n//             });\n\n//             console.log(`ðŸ“¸ Screenshot sent (${reason})`);\n//         } catch (err) {\n//             console.error(\"Screen capture failed:\", err);\n//         }\n//     };\n\n//     useEffect(() => {\n//         const captureScreenshotOnClose = async () => {\n//             await captureScreenshot('window_close');\n//         };\n\n//         window.addEventListener(\"beforeunload\", captureScreenshotOnClose);\n\n//         return () => {\n//             window.removeEventListener(\"beforeunload\", captureScreenshotOnClose);\n//         };\n//     }, []);\n\n//     useEffect(() => {\n//         // Capture on route change\n//         captureScreenshot('navigation');\n\n//         // Event listeners for all activities\n//         const handleKeyPress = (e) => {\n//             if (e.key.length === 1 || e.key.startsWith('F') || e.ctrlKey || e.altKey || e.metaKey) {\n//                 captureScreenshot('keyboard_activity');\n//             }\n//         };\n\n//         const handleMouseClick = (e) => {\n//             captureScreenshot('mouse_click');\n//         };\n\n//         const handleFormInput = (e) => {\n//             if (['INPUT', 'TEXTAREA', 'SELECT'].includes(e.target.tagName)) {\n//                 captureScreenshot('form_interaction');\n//             }\n//         };\n\n//         const handleVisibilityChange = () => {\n//             if (!document.hidden) {\n//                 captureScreenshot('tab_switch');\n//             }\n//         };\n\n//         const handleResize = () => {\n//             captureScreenshot('window_resize');\n//         };\n\n//         const handleScroll = () => {\n//             captureScreenshot('scroll_activity');\n//         };\n\n//         // Add event listeners\n//         document.addEventListener('keydown', handleKeyPress);\n//         document.addEventListener('click', handleMouseClick);\n//         document.addEventListener('input', handleFormInput);\n//         document.addEventListener('change', handleFormInput);\n//         document.addEventListener('visibilitychange', handleVisibilityChange);\n//         window.addEventListener('resize', handleResize);\n//         window.addEventListener('scroll', handleScroll);\n\n//         // Periodic captures\n//         const periodicInterval = setInterval(() => {\n//             captureScreenshot('periodic');\n//         }, 30000);\n\n//         // Cleanup\n//         return () => {\n//             document.removeEventListener('keydown', handleKeyPress);\n//             document.removeEventListener('click', handleMouseClick);\n//             document.removeEventListener('input', handleFormInput);\n//             document.removeEventListener('change', handleFormInput);\n//             document.removeEventListener('visibilitychange', handleVisibilityChange);\n//             window.removeEventListener('resize', handleResize);\n//             window.removeEventListener('scroll', handleScroll);\n//             clearInterval(periodicInterval);\n//         };\n//     }, [location]);\n\n//     return null;\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavbarHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/policy\",\n          element: /*#__PURE__*/_jsxDEV(Policy, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/faqs\",\n          element: /*#__PURE__*/_jsxDEV(Faqs, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/contact\",\n          element: /*#__PURE__*/_jsxDEV(ContactUs, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["html2canvas","useEffect","useRef","useState","Route","BrowserRouter","Router","Routes","useLocation","About","Home","Policy","Footer","NavbarHeader","ContactUs","Faqs","jsxDEV","_jsxDEV","App","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/Muhammad Ali/Desktop/marcos/myapp/frontend/src/App.jsx"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\r\nimport html2canvas from \"html2canvas\";\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Route, BrowserRouter as Router, Routes, useLocation } from 'react-router-dom';\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport About from '../src/About';\r\nimport Home from '../src/Home';\r\nimport Policy from '../src/Policy';\r\nimport \"./assets/app.css\";\r\nimport Footer from \"./components/Footer\";\r\nimport NavbarHeader from './components/NavbarHeader';\r\nimport ContactUs from './ContactUs';\r\nimport Faqs from './Faqs';\r\n\r\n// Enhanced ScreenshotWatcher Component\r\n// function ScreenshotWatcher() {\r\n//     const location = useLocation();\r\n//     const lastCaptureRef = useRef(0);\r\n//     const minInterval = 10000; // 10 seconds between captures\r\n\r\n//     const [success, setSuccess] = useState(false);\r\n\r\n//     const captureScreenshot = async (reason = 'activity') => {\r\n//         const now = Date.now();\r\n//         if (now - lastCaptureRef.current < minInterval) return;  // prevent too frequent\r\n//         lastCaptureRef.current = now;\r\n\r\n//         try {\r\n//             const canvas = await html2canvas(document.body);\r\n//             const dataUrl = canvas.toDataURL(\"image/png\");\r\n\r\n//             // Send the screenshot data to the FastAPI endpoint\r\n//             const response = await fetch(\"https://775307f1e41d.ngrok-free.app/screenshot/upload\", {\r\n//                 method: \"POST\",\r\n//                 headers: { \"Content-Type\": \"application/json\" },\r\n//                 body: JSON.stringify({ image_data: dataUrl })\r\n//             });\r\n\r\n//             console.log(`ðŸ“¸ Screenshot sent (${reason})`);\r\n//         } catch (err) {\r\n//             console.error(\"Screen capture failed:\", err);\r\n//         }\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         const captureScreenshotOnClose = async () => {\r\n//             await captureScreenshot('window_close');\r\n//         };\r\n\r\n//         window.addEventListener(\"beforeunload\", captureScreenshotOnClose);\r\n\r\n//         return () => {\r\n//             window.removeEventListener(\"beforeunload\", captureScreenshotOnClose);\r\n//         };\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         // Capture on route change\r\n//         captureScreenshot('navigation');\r\n\r\n//         // Event listeners for all activities\r\n//         const handleKeyPress = (e) => {\r\n//             if (e.key.length === 1 || e.key.startsWith('F') || e.ctrlKey || e.altKey || e.metaKey) {\r\n//                 captureScreenshot('keyboard_activity');\r\n//             }\r\n//         };\r\n\r\n//         const handleMouseClick = (e) => {\r\n//             captureScreenshot('mouse_click');\r\n//         };\r\n\r\n//         const handleFormInput = (e) => {\r\n//             if (['INPUT', 'TEXTAREA', 'SELECT'].includes(e.target.tagName)) {\r\n//                 captureScreenshot('form_interaction');\r\n//             }\r\n//         };\r\n\r\n//         const handleVisibilityChange = () => {\r\n//             if (!document.hidden) {\r\n//                 captureScreenshot('tab_switch');\r\n//             }\r\n//         };\r\n\r\n//         const handleResize = () => {\r\n//             captureScreenshot('window_resize');\r\n//         };\r\n\r\n//         const handleScroll = () => {\r\n//             captureScreenshot('scroll_activity');\r\n//         };\r\n\r\n//         // Add event listeners\r\n//         document.addEventListener('keydown', handleKeyPress);\r\n//         document.addEventListener('click', handleMouseClick);\r\n//         document.addEventListener('input', handleFormInput);\r\n//         document.addEventListener('change', handleFormInput);\r\n//         document.addEventListener('visibilitychange', handleVisibilityChange);\r\n//         window.addEventListener('resize', handleResize);\r\n//         window.addEventListener('scroll', handleScroll);\r\n\r\n//         // Periodic captures\r\n//         const periodicInterval = setInterval(() => {\r\n//             captureScreenshot('periodic');\r\n//         }, 30000);\r\n\r\n//         // Cleanup\r\n//         return () => {\r\n//             document.removeEventListener('keydown', handleKeyPress);\r\n//             document.removeEventListener('click', handleMouseClick);\r\n//             document.removeEventListener('input', handleFormInput);\r\n//             document.removeEventListener('change', handleFormInput);\r\n//             document.removeEventListener('visibilitychange', handleVisibilityChange);\r\n//             window.removeEventListener('resize', handleResize);\r\n//             window.removeEventListener('scroll', handleScroll);\r\n//             clearInterval(periodicInterval);\r\n//         };\r\n//     }, [location]);\r\n\r\n//     return null;\r\n// }\r\n\r\nexport default function App() {\r\n    return (\r\n        <Router>\r\n            {/* <ScreenshotWatcher /> */}\r\n\r\n            <div>\r\n                <NavbarHeader />\r\n                <Routes>\r\n                    <Route path=\"/\" element={<Home />} />\r\n                    <Route path=\"/about\" element={<About />} />\r\n                    <Route path=\"/policy\" element={<Policy />} />\r\n                    <Route path=\"/faqs\" element={<Faqs />} />\r\n                    <Route path=\"/contact\" element={<ContactUs />} />\r\n                </Routes>\r\n                <Footer />\r\n            </div>\r\n        </Router>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}